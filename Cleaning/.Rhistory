plot(density(x))
help(rnorm)
boxplot(x,y)
boxplot(x)
hist(x)
x <-rnorm(50,5,2)
hist(x)
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
1/x
y<-1/x
print(y)
paste(c("X","Y"), 1:10, sep="")
z<-c(1:3,NA)
is.na(z)
0/0
Inf-Inf
x <- c(-5:-1, NA, NA, 1:3)
print(x)
x <- c(-5:-10, NA, NA, 1:3)
print(x)
y <- x[!is.na(x)]
print(y)
x <- c(-5:-1, NA, NA, 1:3)
y <- x[!is.na(x)]
print(y)
print(x)
y <- x[(!is.na(x)) & x>0]
print(y)
x <- c(-5:-1, NA, NA, 1:3)
y <- x[!is.na(x)]
y <- x[(!is.na(x)) & x>0]
x <- c(-5:-1, NA, NA, 1:3)
y <- x[!is.na(x)]
print(y)
print(x)
y <- x[(!is.na(x)) & x>0]
print(y)
install.packages("data.table")
temp <- x > 13
print(temp)
temp <- x > 13
temp <- x > 13
temp<- x > 13
temp <-x > 13
temp <-x>13
temp <-x>13
x <- c(-5:-1, NA, NA, 1:3)
temp <-x>13
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
temp <-x>13
print(temp)
temp <-x(-3:7)
temp <-x[-3:7]
temp <-x -3:7
print(temp)
temp <-x 3:7
temp <-x -3:7
print(temp)
print(x)
temp <-x [-(3:7)]
print(temp)
money <- c(10,100000,-10,NA,15)
print(money)
strangeAnswers <- money[(is.na(x)) & money<0]
normalPeople <- money[(!is.na(x)) & money>=0 & money < 200]
toffs <- money[money > 10000]
fruit <- c(5, 10, 1, 20)
names(fruit) <- c("orange", "banana", "apple", "peach")
lunch <- fruit[c("apple","orange")]
print(lunch)
lunch <- fruit[c()]
print(lunch)
lunch <- fruit[c("apple","banana","peach")]
print(lunch)
data("mtcars")
data("mtcars")
mean(mtcars)
mean(mtcars$mpg)
str(mtcars)
summary(mtcars)
summary(mtcars)
view(mtcars)
print(mtcars)
plot(mtcars$vs)
plot(mtcars$hp)
barplot(mtcars$hp)
barplot(mtcars)
barplot(mtcars$disp)
pie(mtcars$disp)
print(nrow(mtcars$am))
print(nrow(mtcars$am==0))
print(ncol(mtcars$am==0))
x <-c(10.4,5.6,3.1,6.4,21.7)
print(x)
log(x)
x+1
X-1
x-1
print(x)
sqrt(x)
exp(x)
sin(x)
extc
etc
x >3&x<7
x[x>3&x<7]
m<-mean(x)
print(m)
x[x>m]
s<-sd(x)
x[x<(m-s)|x>(m-s)]
x[x<(m-s)|x>(m+s)]
y <- c(-5:-1, NA, NA, 1:3)
m<-mean(y)
print(m)
x[is.na(x)] <- mean(x, na.rm=TRUE)
print(x)
print(y)
y[is.na(y)] <- mean(y, na.rm=TRUE)
print(y)
?rnorm
x<-rnorm(x)
x<-rnorm(50)
y<-rnorm(x)
plot(x,y)
boxplot(x)
hist(x)
rm(y)
x<-null
x<- NULL
print(x)
paste(c("X","Y"), 1:10, sep="")
paste(c("X","Y"), 1:100, sep="")
paste(c("X","Y"), 1:100000, sep="")
cls
cls()
z<-c(1:3,NA)
is.na(z)
is.1(z)
print(z)
data("mtcars")
view(data)
View(mtcars)
str(data)
car<-data("mtcars")
print(car)
str(car)
data("mtcars")
str(data)
mtcars$cy1<-as.factor(mtcars$cy1)
mtcars$cyl<-as.factor(mtcars$cyl)
str(data)
str(mtcars)
mtcars$am<-factor(mtcars$am,label=c("Automatic","Manual"),levels=c(0,1))
str(mtcars)
table(mtcars$am)
maxwt<-max(mtcars$wt)
(mtcars[mtcars$wt>=maxwt,])
print(maxwt)
x <- c(1:3, 7, 8:10)
attributes(x)
class(x)
x<-as.factor(x)
str(x)
print(x)
x<-as.data.frame(x)
print(x)
age<-(20, 21, 22)
age<-c(20, 21, 22)
name<-c("Amy","Bill","Carl")
DAD<-c(80,80,90)
BDA<-c(70,70,100)
gender<-as.factor("F","M","M")
nationality<-c("IRL","UK","IN")
age<-c(20, 21, 22)
gender<-as.factor(c("F","M","M"))
student.df<-data.frame(name,age,gender,nationality,DAD,BDA)
print(student.df)
attributes(student.df)
student.df$gender
student.df['gender']
mean(student.df$BDA)
mean(student.df$DAD)
studen.df$average<-(student.df$DAD+student.df$BDA)/2
student.df$average<-(student.df$DAD+student.df$BDA)/2
student.df$average
?rnorm
student.df$name <- as.character(student.df$name)
print(student.df$name)
str(student.df$name)
student.df <- rbind(student.df, c("Dennis", 23, "M", "UK", 55, 70))
print(student.df)
levels(student.df$nationality)
table(student.df$nationality)
barplot(table(student.df$nationality),xlab="Nationality",ylab="Count")
summary(mtcars)
?mtcars
mtcars$cyl<-as.factor(mtcars$cyl)
mtcars$am<-factor(mtcars$am,labels=c("Automatic","Manual"),levels=c(0,1))
str(mtcars)
hist(mtcars$mpg,break=10)
hist(mtcars$mpg,break = 10)
hist(mtcars$mpg , break = 10)
hist(mtcars$mpg, break = 10)
s
hist(mtcars$mpg, breaks = 10)
boxplot(mtcars$hp)
boxplot(table(mtcars$cyl)
barplot(table(mtcars$cyl)
barplot(table(mtcars$cyl))
?coplot
coplot(mpg ~ hp| cyl ,data=mtcars ,panel=panel.smooth,row=1)
coplot(mpg ~ hp| cyl ,data=mtcars ,panel=panel.smooth,row=2)
coplot(mpg ~ hp| cyl ,data=mtcars ,panel=panel.smooth,row=8)
View(mtcars)
coplot(mpg ~ hp| cyl ,data=mtcars ,panel=panel.smooth,row=1)
?~
?operators
?operator
?coplot
coplot(mpg ~ hp ,data=mtcars ,panel=panel.smooth,row=1)
plot(mpq,hp)
plot(mpg,hp)
plot(mtcars$mpg,mtcars$hp)
barplot(mtcars$mpg,mtcars$hp)
hist(mtcars$mpg,mtcars$hp)
hist(mtcars$mpg)
hist(mtcars$mpg ,breaks=1)
hist(mtcars$mpg ,breaks=10)
?mtcars
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"), levels=c(0,1))
View(mtcars)
data("mtcars")
View(mtcars)
str(mtcars)
mtcars$am<-as.factor(mtcars$am)
str(mtcars)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"), levels=c(0,1))
table(mtcars$am)
View(mtcars)
table(max(mtcars$wt))
table(max(mtcars$wt,name))
mtcars$cyl<-as.factor(mtcars$cyl)
table(max(mtcars$wt,cyl))
table(max(mtcars$wt,mtcars$cyl))
maxwt<-max(mtcars$wt)
mtcars[mtcars$wt>=maxwt,]
mtcars[mtcars$qsec<=minqsec]
minqsec<-max(mtcars$qsec)
mtcars[mtcars$qsec<=minqsec]
mtcars[mtcars$qsec<=minqsec,]
mtcars[mtcars$qsec<minqsec,]
minqsec<-min(mtcars$qsec)
mtcars[mtcars$qsec<minqsec,]
mtcars[mtcars$qsec=minqsec,]
mtcars[mtcars$qsec==minqsec,]
bmil<-max(mtcars$mpg)
mtcars[mtcars$mpg=bmil,mtcars$am]
mtcars[mtcars$mpg=bmil,]
bmil<-max(mtcars$mpg)
mtcars[mtcars$mpg=bmil,]
mtcars[mtcars$mpg==bmil,]
mtcars[mtcars$mpg==bmil,mtcars$am]
avgmpgam<-average(mtcars$mpg,mtcars$am)
avgmpgam<-average(mtcars$mpg ~mtcars$am)
?tapply
avgmpgam<-tapply(mtcars$mpg, mtcars$am, mean)
(avgmpgam<-tapply(mtcars$mpg, mtcars$am, mean))
avgmpq<-average(mtcars$hp)
avgmpq<-avg(mtcars$hp)
?average
avgmpq<-mean(mtcars$hp)
(mtcars$hp>avgmpq)
mtcars(mtcars$hp>avgmpq)
mtcars$hp(mtcars$hp>avgmpq)
mtcars$hp[mtcars$hp>avgmpg,]
avgmpq<-mean(mtcars$hp)
mtcars$hp[mtcars$hp>avgmpg,]
mtcars$hp[mtcars$hp>avgmpq,]
mtcars[mtcars$hp>avgmpq,]
aboveavg<-mtcars[mtcars$hp>avgmpq,]
dim(aboveavg)
?dim
print(aboveavg)
print(avgmpq)
aboveavg<-mtcars[mtcars$hp>avgmpq|mtcars$cyl==6,]
print(aboveavg)
aboveavg<-mtcars[mtcars$hp>avgmpq&mtcars$cyl==6,]
print(aboveavg)
aboveavg<-mtcars[mtcars$hp>avgmpq&mtcars$cyl==6&mtcars$am==Automatic,]
aboveavg<-mtcars[mtcars$hp>avgmpq&mtcars$cyl==6&mtcars$am=="Automatic",]
print(aboveavg)
dim(aboveavg)
boxplot(mpg~cyl,data=mtcars)
hist(mpg~cyl,data=mtcars)
barplot(mpg~cyl,data=mtcars)
boxplot(mpg~cyl,data=mtcars)
##getting youtube data
library(SocialMediaLab)
##API KEY
ApiKey <-"AIzaSyA8OKYLobwwX7o-2AHEpNl4ShDnpQb7ZzI"
key<-AuthenticateWithYoutubeAPI(ApiKey)
##collect Data
Video <-c('sP_f5YmkSaw')
ytdata <- CollectDataYoutube(Video, key, writeToFile = FALSE)
str(ytdata)
print(ytdata)
write.csv(ytdata ,file = '~/Test.csv', row.names = F)
setwd("~/")
##getting youtube data
library(SocialMediaLab)
##API KEY
ApiKey <-"AIzaSyA8OKYLobwwX7o-2AHEpNl4ShDnpQb7ZzI"
key<-AuthenticateWithYoutubeAPI(ApiKey)
##collect Data
Video <-c('sP_f5YmkSaw')
ytdata <- CollectDataYoutube(Video, key, writeToFile = FALSE)
str(ytdata)
print(ytdata)
write.csv(ytdata ,file = '~/Test.csv', row.names = F)
afin <- get_sentiments("afinn")
bing <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
library(tidyr)
library(textcat)
library(tidyverse)
library(tidytext)
library(dplyr)
library(reshape)
afin <- get_sentiments("afinn")
bing <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
View(afin)
View(bing)
View(nrc)
library(SocialMediaLab)
install.packages("SocialMediaLab")
##getting youtube data
library(SocialMediaLab)
ApiKey <-"AIzaSyA8OKYLobwwX7o-2AHEpNl4ShDnpQb7ZzI"
key<-AuthenticateWithYoutubeAPI(ApiKey)
Video <-c('6kUpouVf_9w')
ytdata <- CollectDataYoutube(Video, key, writeToFile = FALSE)
str(ytdata)
setwd("~/")
getwd()
write.csv(ytdata ,file = 'varunTest.csv', row.names = F)
nrc <- get_sentiments("nrc")
library(tidyr)
library(textcat)
library(tidyverse)
library(tidytext)
library(dplyr)
library(reshape)
nrc <- get_sentiments("nrc")
View(nrc)
data <-read.csv(file.choose(),header = T)
comments<- iconv(data$Comment, to ='UTF-8')
## Obtain sentiment scores
s<-get_nrc_sentiment(comments)
#sentiment analysis
library(syuzhet)
install.packages("syuzhet")
#sentiment analysis
library(syuzhet)
## Obtain sentiment scores
s<-get_nrc_sentiment(comments)
s$neutral <- ifelse(s$negative+s$positive==0,1, 0)
barplot(10*colSums(s)/sum(s),
las =2,
col =rainbow(10),
ylab ='percentage',
main ='Sentiment Scores for Youtube comments')
Reviews <-read.csv("varunTest.csv",header=T, na.strings=c(""), stringsAsFactors = F)
library(tidyr)
library(textcat)
library(tidyverse)
library(tidytext)
library(dplyr)
library(reshape)
afin <- get_sentiments("afinn")
bing <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
text_df<-Reviews$Comment %>% unnest_tokens(word, text)
text_df<-data_frame(user = Reviews$User,text=Reviews$Comment)
text_df<-text_df %>% unnest_tokens(word, text)
afinSent <- text_df %>%
inner_join(afin) %>%
group_by(index = User) %>%
summarise(sentiment = sum(score))
afinSent <- text_df %>%
inner_join(afin) %>%
group_by(index = user) %>%
summarise(sentiment = sum(score))
View(afinSent)
bingSent <- text_df %>%
inner_join(bing) %>%
count(index = user, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive-negative)
nrcSent <- text_df %>%
inner_join(nrc) %>%
count(index = user, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(bingSent)
View(nrcSent)
View(bingSent)
View(afinSent)
View(afin)
View(afinSent)
View(bingSent)
View(nrcSent)
?cbind
?merge
Reviews <-read.csv("varunTest.csv",header=T, na.strings=c(""), stringsAsFactors = F)
text_df<-data_frame(user = Reviews$User,text=Reviews$Comment)
text_df<-text_df %>% unnest_tokens(word, text)
afin <- get_sentiments("afinn")
bing <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
afinSent <- text_df %>%
inner_join(afin) %>%
group_by(index = user) %>%
summarise(sentiment = sum(score))
bingSent <- text_df %>%
inner_join(bing) %>%
count(index = user, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive-negative)
nrcSent <- text_df %>%
inner_join(nrc) %>%
count(index = user, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(afinSent)
sentimentRaw<-merge(afinSent,bingSent,by=index)
sentimentRaw<-merge(afinSent,bingSent,by="index")
View(sentimentRaw)
P_Apps<-read.csv("statistic_id243763_leading-android-app-reach-in-the-united-states-2018.csv",header = T,na.strings = c(""),stringsAsFactors = F)
names(P_Apps)[1]<-"App"
names(P_Apps)[2]<-"Penetration rates in %"
install.packages("tuber")
library(tuber)
library(tuber)
id<-"438258601627-edsql524731iq8ifdoc2cg0sr93srvea.apps.googleusercontent.com"
secrect<-"1zSzbYIpq5oLVc7jHNirLUGG"
yt_oauth(id,secrect,token='')
library(tuber)
id<-"438258601627-edsql524731iq8ifdoc2cg0sr93srvea.apps.googleusercontent.com"
secrect<-"1zSzbYIpq5oLVc7jHNirLUGG"
yt_oauth(id,secrect,token='')
library(tuber)
id<-"438258601627-edsql524731iq8ifdoc2cg0sr93srvea.apps.googleusercontent.com"
secrect<-"1zSzbYIpq5oLVc7jHNirLUGG"
yt_oauth(id,secrect,token='')
library(tuber)
id<-"438258601627-edsql524731iq8ifdoc2cg0sr93srvea.apps.googleusercontent.com"
secrect<-"1zSzbYIpq5oLVc7jHNirLUGG"
yt_oauth(id,secrect,token='')
yt_oauth(id,secrect,token='')
library(tuber)
id<-"438258601627-edsql524731iq8ifdoc2cg0sr93srvea.apps.googleusercontent.com"
secrect<-"1zSzbYIpq5oLVc7jHNirLUGG"
yt_oauth(id,secrect,token='')
get_all_comments(videoid='NEh5N3OZCXc')
get_comments(videoid="NEh5N3OZCXc")
get_stats(videoid="NEh5N3OZCXc")
get_stats(videoID='NEh5N3OZCXc')
get_stats(video_id = 'NEh5N3OZCXc')
get_comments(video_id = 'NEh5N3OZCXc')
get_captions(video_id = 'NEh5N3OZCXc')
install.packages("timetk")
library(timetk)
install.packages("installr")
install.packages("timetk")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
summary(cars)
plot(pressure)
churn <- read.csv(file="./datasets/ABT_Telco_Churn.csv",
na.strings = c("", "#N/A"))
biocLite("EBImage")
biocLite()
biocLite("EBImage")
source("http://bioconductor.org/biocLite.R")
version
library(keras)
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install("EBImage")
install.packages("party")
library(party)
data("readingSkills")
r<-data("readingSkills")
rm(readingSkills)
rm(r)
install.packages("grid","mvtnorm","modeltools","stats4","strucchange","zoo","sandwich")
install.packages("grid", "mvtnorm", "modeltools", "stats4", "strucchange", "zoo", "sandwich")
install.packages("grid", "mvtnorm", "modeltools", "stats4", "strucchange", "zoo", "sandwich")
install.packages("grid", "mvtnorm", "modeltools", "stats4", "strucchange", "zoo", "sandwich")
install.packages(c("BH", "callr", "checkmate", "clipr", "colorspace", "curl", "data.table", "dbplyr", "ggformula", "git2r", "Hmisc", "htmlTable", "httpuv", "igraph", "jomo", "kableExtra", "later", "lme4", "mgcv", "mitml", "modelr", "mosaic", "openssl", "pdftools", "ps", "purrr", "raster", "RcppArmadillo", "readr", "readxl", "rlang", "rstudioapi", "slam", "SnowballC", "stringr", "tibble", "tm"))
install.packages("later")
library(party)
install.packages("sandwich")
library(party)
library(sandwich)
library(party)
setwd("D:/MS/Trisemester-2/PDA/Final project/Scripts/Cleaning")
data<-read.csv("employee_reviews.csv",na.strings = TRUE,stringsAsFactors = FALSE)
View(data)
